build: false
clone_folder: c:\projects\wmi-scripting

init:
  - SET COMPOSER_NO_INTERACTION=1
  - SET ANSICON=121x90 (121x90)
  - REG ADD "HKEY_CURRENT_USER\Software\Microsoft\Command Processor" /v DelayedExpansion /t REG_DWORD /d 1 /f

environment:
  matrix:
    - PHP_VERSION: "7.1.25"
      PHP_DIR: "php71"
      XDEBUG: "https://xdebug.org/files/php_xdebug-2.8.0beta1-7.1-vc14-nts-x86_64.dll"

    - PHP_VERSION: "7.2.20"
      PHP_DIR: "php72"
      XDEBUG: "https://xdebug.org/files/php_xdebug-2.8.0beta1-7.2-vc15-nts-x86_64.dll"

    - PHP_VERSION: "7.3.8"
      PHP_DIR: "php73"
      XDEBUG: "https://xdebug.org/files/php_xdebug-2.8.0beta1-7.3-vc15-nts-x86_64.dll"

matrix:
  fast_finish: true

cache:
  - composer.phar -> appveyor.xml
  - ocular.phar -> appveyor.xml
  - c:\projects\wmi-scripting\vendor
  - c:\tools\%PHP_DIR%

install:
  - SET PATH=c:\tools\%PHP_DIR%;%PATH%
  - IF NOT EXIST c:\tools\%PHP_DIR%\php.exe (
          cinst -y php -i --version %PHP_VERSION% &&
          cd c:\tools\%PHP_DIR% &&
          echo extension_dir=ext >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_openssl.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_curl.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_mbstring.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_pdo_mysql.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_pdo_sqlite.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_fileinfo.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_gd2.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_ftp.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo extension=php_com_dotnet.dll >> c:\tools\%PHP_DIR%\php.ini &&
          echo memory_limit=256M >> c:\tools\%PHP_DIR%\php.ini &&
          echo curl.cainfo=C:\tools\cacert.pem >> c:\tools\%PHP_DIR%\php.ini
      )
  - cd c:\tools
  - appveyor DownloadFile https://curl.haxx.se/ca/cacert.pem

  - cd c:\projects\wmi-scripting

  - git config --global user.email "%GIT_EMAIL%"
  - git config --global user.name "%GIT_USER%"
  - yarn install
  - yarn docs:deploy:windows:ci

  - IF NOT EXIST composer.phar (appveyor DownloadFile https://github.com/composer/composer/releases/download/1.9.0/composer.phar)
  - php composer.phar self-update
  - php composer.phar update --no-interaction --prefer-dist --no-suggest --ansi --no-progress

before_test:
  - IF NOT EXIST c:\tools\%PHP_DIR%\ext\xdebug.dll (appveyor DownloadFile %XDEBUG% -Filename c:\tools\%PHP_DIR%\ext\xdebug.dll)
  - copy /Y c:\tools\%PHP_DIR%\php.ini c:\tools\%PHP_DIR%\php.ini.base
  - echo zend_extension=xdebug.dll >> c:\tools\%PHP_DIR%\php.ini

test_script:
  - SET X=0
  - vendor\bin\phpunit --coverage-clover coverage.clover --configuration phpunit.xml --log-junit junit-results.xml || SET X=!errorlevel!
  - exit %X%

after_test:
  - ps: |
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\junit-results.xml))
  - copy /Y c:\tools\%PHP_DIR%\php.ini.base c:\tools\%PHP_DIR%\php.ini
  - IF NOT EXIST ocular.phar (appveyor DownloadFile https://github.com/scrutinizer-ci/ocular/releases/download/1.6.0/ocular.phar)
  - php ocular.phar code-coverage:upload --format=php-clover coverage.clover